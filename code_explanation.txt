XIWSentenceManager
This is a model for holding the text input. The input text is stored as the variable sentence. In the model, there is a getter that is implemented to return its value, as well as a setter which uses NSUserDefaults to store the input text over user sessions.

XIWMainViewController
Controller for the main view where text is input. Has an lazy instantiation method for the sentenceManager model. On view load, the background image is set and it also checks if there is already text stored in memory; if so, it automatically moves on to the next view. The function saveAndContinue takes the input from the sentenceField outlet, splits the input sentence into words, checks for the minimum number of words, and then either shows an alert to prompt the user for more words or stores the input and moves on to the editor view. This function responds to the button Go being pressed. The function clearText clears the input field and clears the stored text from the sentenceManager model. This responds to the button Clear being pressed.

XIWEditorViewController
Controller for the editor view. It has an array of words where the input is stored, a sentenceManager for handling the input sentence, and several outlets that respond to controls on the page. The editingLabel represents the sentence being edited, the wordCount represents the number of words in the sentence, the currentWord is a way for the controller to know which word is being edited, and the wordStepper responds to the stepper on the view. 
When the stepper is pressed, the funciton selectWord is called, which then calls updateUI. The updateUI method gets the index of the stepper, accesses the corresponding word in the array of words, searches for that string in the sentence, and sets the appropriate highlighting by calling addLabelAttributes. The addLabelAttributes function essentially applies the attributes argument to a range of characters in the sentence. For this app, the attributes being passed in are color changes, as defined in the function changeColor. This function responds to the corresponding button presses to set the foreground color of element as the button's background color. Lastly, in viewDidLoad, the labels' values are set, and the wordStepper limits are calculated to prevent overstepping the number of words. 